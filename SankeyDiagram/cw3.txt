import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.*;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
public class cw3 extends Application {
    public static void main(String[] args) {
        launch(args);
    }
    @Override
    public void start(Stage stage)  {
        NumWords pane = new NumWords();
        pane.paint();
        //Create a scene object and add the pane object to it
        Scene scene = new Scene(pane, 500, 500);
        //Set the Stage's Scene and display the Stage
        stage.setScene(scene);
        stage.show();
    }
    public class NumWords extends Pane {
        //Read the data in the txt file and store it in the map
        static Map<String, Integer> map = new HashMap<>();
        public void wordCount() {
            int num = 0;
            try {
                File ex = new File("source.txt");
                Scanner scanner = new Scanner(ex);
                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    num = num + 1;
                    String[] text = line.split(",");
                    if (text.length == 0) {
                        num--;
                    }
                    if (text.length == 2 && num > 1) {
                        map.put(text[0], Integer.valueOf((text[1])));
                    }
                }
                System.out.println(map);
                scanner.close();
            } catch (IOException ioe) {
                System.out.println(ioe.getMessage());
            }
        }
        public void setWidth(double width) {
            super.setWidth(width);
            paint();
        }
        public void setHeight(double height) {
            super.setHeight(height);
            paint();
        }
        //Paint the sankey diagram
        public void paint() {
            wordCount();
            //1.Create a big rectangle
            double height = 0.8 * getHeight();
            Rectangle large = new Rectangle(100, 60, 0.1 * getWidth(), height);
            large.setFill(Color.GREEN);
            //2.Create small rectangles and calculate the positions
            double val, sum = 0, y = 0;
            double sety = large.getY();
            for (String key : map.keySet()) {
                sum = sum + map.get(key);
            }
            getChildren().clear();
            for (String key : map.keySet()) {
                val = ((map.get(key)) / sum) * height;
                Rectangle rec = new Rectangle(0.8 * getWidth(), y, 0.1 * getWidth(), val);
                rec.setFill(Color.YELLOW);
                rec.setStroke(Color.color(Math.random(), Math.random(), Math.random()));
                y += (val + 20);
                //3.Draw a Bezier curve
                CubicCurve cubic = new CubicCurve();
                cubic.setStartX(large.getX() + large.getWidth());
                cubic.setStartY(rec.getHeight() / 2 + sety);
                sety = sety+ rec.getHeight();
                cubic.setEndX(rec.getX());
                cubic.setEndY(rec.getY() + rec.getHeight() / 2);
                cubic.setControlX1(cubic.getStartX() + (0.4 * getWidth()));
                cubic.setControlY1(cubic.getStartY());
                cubic.setControlX2(cubic.getEndX() - (0.4 * getWidth()));
                cubic.setControlY2(cubic.getEndY());
                cubic.setStrokeWidth(rec.getHeight());
                cubic.setStroke(rec.getStroke());
                //4.add the data
                getChildren().addAll(cubic, rec, new Text(cubic.getEndX(), cubic.getEndY(), key+" "+map.get(key)));
            }
            try{
                File ex = new File("source.txt");
                Scanner scanner = new Scanner(ex);
                String line1=scanner.nextLine();
                System.out.println(line1);
                getChildren().addAll(large,new Text(0.1*getWidth(),0.5*getHeight(),line1));
            } catch (IOException ioe) {
                System.out.println(ioe.getMessage());
            }
        }
    }
}